Работа с бэкендом
=================
Следующую информацию следует изучить перед тем, как приступать к работе с бэкендом!

Endpoints
---------
Бэкенд в лице Django REST Framework предоставляет эндпоинты для доступа со фронтенда.
Для каждого из приложений имеется параграф "Endpoints", где перечислены все доступные
для пользования эндпоинты.

В зависимости от того, какой метод HTTP используется на эндпоинте, передача параментов
может варьироваться:

* Для методов ``GET`` параментры передаются через строку URL. В параграфах "Endpoints" параметры в строке URL указаны внутри скобок. Например ``foo/create_bar/{id}``. Здесь ``id`` является параметром, поэтому передаваемая строка будет иметь вид в реальности ``foo/create_bar/73287823823``.
* Для методов ``POST``, ``DELETE``, ``PUT`` параметры передаются в теле HTTP запроса.

Режимы работы
-------------
Бэкенд может работать в двух режимах: development и production. Эти режимы отличаются используемыми пакетами и
настройками. Режим development используется при разработке, он включает в себя специальные утилиты для работы с Django и
различные прикладные пакеты. Режим production используется при развёртывании проекта на боевом сервере. В нём всё
оптимизировано максимально, ненужных вещей нет. Для того, чтобы выбрать режим, необходимо открыть файл `~/.bashrc` (если
используется Bash) или `~/.zshrc` (если используется Zsh) и прописать переменную среды:

* `export GYMSTRENGTH_MODE="DEV"` - режим разработки (development);
* `export GYMSTRENGTH_MODE="PROD"` - режим релиза (production);

Что это даст:

* Данная настройка будет подхвачена Django (`GymStrength/backend/GymStrength/settings/mode.py`).
* В основном файле настрок (`GymStrength/backend/GymStrength/settings/base.py`) будут подгружены нужные настройки из папки `config/` и применены к проекту.

Данный подход позволяет не афишировать информацию, как секретные ключи и пароли, в репозитории.