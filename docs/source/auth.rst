Система аутентификация
======================
Для аутентификации используется JWT (JSON Web Token) - веб-токен, передаваемый
в формате JSON. Для JWT необходим секретный ключ, чтобы сервер мог вывести пользователя
пользователя из самого веб-токена.

Чтобы не создавать собственную систему аутентификации, был установлен удобный пакет Djoser,
у которого уже имеются эндпоинты для регистрации пользователя и выдачи JWT токенов.

1. Создание JWT токена.
2. Обновление JWT токена.
3. Проверка валидности JWT токена.
4. Регистрация нового пользователя.
5. Активация аккаунта пользователя.

+---+-------------------------------+-------+--------------------------------+----------------------------+
| № | URL                           | Метод | Параметр                       | Назначение                 |
+===+===============================+=======+================================+============================+
| 1 | ``api/auth/jwt/create/``      | POST  | ``{{ User.USERNAME_FIELD }}``  | Поле с именем пользователя |
|   |                               |       +--------------------------------+----------------------------+
|   |                               |       | ``password``                   | Пароль пользователя        |
+---+-------------------------------+-------+--------------------------------+----------------------------+
| 2 | ``api/auth/jwt/refresh/``     | POST  | ``refresh``                    | Refresh-токен              |
+---+-------------------------------+-------+--------------------------------+----------------------------+
| 3 | ``api/auth/jwt/verify/``      | POST  | ``token``                      | Access-токен               |
+---+-------------------------------+-------+--------------------------------+----------------------------+
| 4 | ``api/auth/users/``           | POST  | ``{{ User.USERNAME_FIELD }}``  | Поле с именем пользователя |
|   |                               |       +--------------------------------+----------------------------+
|   |                               |       | ``{{ User.REQUIRED_FIELDS }}`` | Другие требуемые поля      |
|   |                               |       +--------------------------------+----------------------------+
|   |                               |       | ``password``                   | Пароль                     |
|   |                               |       +--------------------------------+----------------------------+
|   |                               |       | ``re_password``                | Повтор пароля              |
+---+-------------------------------+-------+--------------------------------+----------------------------+
| 5 | ``api/auth/users/activation`` | POST  | ``uid``                        | ID пользователя            |
|   |                               |       +--------------------------------+----------------------------+
|   |                               |       | ``token``                      | Токен                      |
+---+-------------------------------+-------+--------------------------------+----------------------------+

Регистрация и активация аккаунта пользователя
---------------------------------------------
Стоит отметить, что JWT токен по результату данной процедуры не выдаётся! После того, как
аккаунт пользователя активирован, пользователь должен войти под своим логином и паролем.
Только после входа будет выдан JWT.

1. Пользователь вводит свои персональные данные в форму для регистрации:
    * Логин;
    * E-mail;
    * Пароль.
2. Он нажимает кнопку "Зарегистрироваться", которая отправляет POST запрос №4 на сервер.
3. Происходит валидация данных?
4. Сервер сохраняет эти данные в БД. Далее он генерирует письмо активации со специальной ссылкой,
   которая включает в себя ``uid`` и ``token``, и сгенерированной модулем Djoser.
5. Пользователь проверяет свою почту и переходит по ссылке, указанной в письме активации.
6. Ссылка перебрасывает пользователя на страницу активации.
7. Из URL строки на фронтенде извлекаются ``uid`` и ``token``.
8. Эти данные отправляются на сервер в виде POST запроса №5.
9. На сервере учётная запись (``User`` и ``UserProfile``) переходит в состояние ``is_active=True``.

Вход в систему пользователем
----------------------------
1. Пользователь вводит свои персональные данные в форму для логина:
    * Логин;
    * Пароль.
2. Он нажимает кнопку "Войти", которая отправляет POST запрос №1 на сервер.
3. Djoser принимает логин и пароль и на их основе генерирует пару токенов.
4. Токены отправляются пользователю.
5. Пользователь принимает токены и сохраняет их в ``localStorage`` браузера.
